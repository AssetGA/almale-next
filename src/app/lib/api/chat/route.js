import { NextResponse } from "next/server";
import { openai } from "../../../utils/bot/openai";

// üß† –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
const SYSTEM_PROMPT = `
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ –º–µ–¥–Ω–æ–π –ø–æ—Å—É–¥—ã –±—Ä–µ–Ω–¥–∞ **Alma'le**.  
–û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –∫—Ä–∞—Å–∏–≤–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ, –∫–∞–∫ –±—É–¥—Ç–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –≤ –º–∞–≥–∞–∑–∏–Ω–µ.  

–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ —Ñ–∞–∫—Ç—ã —Å —Å–∞–π—Ç–∞ [https://alma-le.com](https://alma-le.com) –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–µ–Ω–¥–µ –≤ YouTube.  
–ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ ‚Äî –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ —É—Ç–æ—á–Ω–∏—à—å, –Ω–æ –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π.

üî∏ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –ü–æ–º–æ–≥–∞—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –ø–æ—Å—É–¥—É Alma'le, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—è –µ—ë –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å.
- –ì–æ–≤–æ—Ä–∏—Ç—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è.
- –î–µ–ª–∞—Ç—å —É–ø–æ—Ä –Ω–∞ **–∫–∞—á–µ—Å—Ç–≤–æ, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å, —ç—Å—Ç–µ—Ç–∏–∫—É, –ø–æ–ª—å–∑—É –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è**.
- –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å, —á—Ç–æ –Ω–∞–±–æ—Ä –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –º–∞–º—ã –∏–ª–∏ –∂–µ–Ω—ã.
- –£–ø–æ–º–∏–Ω–∞—Ç—å, —á—Ç–æ **—Ü–µ–Ω–∞ –Ω–∞–±–æ—Ä–∞ ‚Äî 395 000 ‚Ç∏** (–ø–æ –∫—É—Ä—Å—É –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∞ –†–ö).
- –£—Ç–æ—á–Ω—è—Ç—å, —á—Ç–æ **–¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É**, –≤–æ–∑–º–æ–∂–Ω–∞ **–æ–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π**, **–¥–æ—Å—Ç–∞–≤–∫–∞ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ**.
- –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–µ –æ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –≥–æ–≤–æ—Ä–∏—Ç—å, —á—Ç–æ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å **–≤ –ö–∞—Å–ø–∏ –º–∞–≥–∞–∑–∏–Ω–µ Alma'le**.

üí¨ –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–æ–≤:
- ‚Äú–≠—Ç–∞ –º–µ–¥–Ω–∞—è –∫–∞—Å—Ç—Ä—é–ª—è –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–∏–≤–∞—è, –Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∫—É—Å –∏ –∞—Ä–æ–º–∞—Ç –±–ª—é–¥. –û–Ω–∞ –ø—Ä–æ—Å–ª—É–∂–∏—Ç –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏—è.‚Äù
- ‚Äú–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É ‚Äî –æ—Ç –ê–ª–º–∞—Ç—ã –¥–æ –ü–∞—Ä–∏–∂–∞.‚Äù
- ‚Äú–ù–∞–±–æ—Ä –∑–∞ 395 000 ‚Ç∏ ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å –∑–∞–±–æ—Ç—É –∏ –≤–Ω–∏–º–∞–Ω–∏–µ.‚Äù

üì¶ –ü—Ä–∏ –æ—Ç–≤–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –ø–æ–º–Ω–∏: —Ç–≤–æ—è —Ü–µ–ª—å ‚Äî –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –≤—ã–∑–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∫—É–ø–∏—Ç—å –∏–ª–∏ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ.
`;

// üó®Ô∏è –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ (—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ Redis –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏)
const INITIAL_SESSION = {
  messages: [{ role: "system", content: SYSTEM_PROMPT }],
};

// üî§ –ú–∞–ø–ø–∏–Ω–≥ —è–∑—ã–∫–æ–≤
const LANGUAGE_LABELS = {
  kz: "–û—Ç–≤–µ—Ç—å –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.",
  ru: "–û—Ç–≤–µ—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ.",
  en: "Answer in English, warmly and professionally.",
};

export async function POST(request) {
  try {
    const { message, lang, name, phone } = await request.json();
    console.log("lang", lang);
    if (!message || message.trim() === "") {
      return NextResponse.json(
        { message: "–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ." },
        { status: 400 }
      );
    }

    if (!lang || !["ru", "kz", "en"].includes(lang)) {
      return NextResponse.json(
        { message: "–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —è–∑—ã–∫ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ru, kz –∏–ª–∏ en)." },
        { status: 400 }
      );
    }

    // üó®Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ —è–∑—ã–∫—É
    INITIAL_SESSION.messages.push({
      role: "user",
      content: `${LANGUAGE_LABELS[lang]}\n–°–æ–æ–±—â–µ–Ω–∏–µ: "${message}"`,
    });

    // –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 12 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è system)
    if (INITIAL_SESSION.messages.length > 20) {
      // –æ—Å—Ç–∞–≤–∏–º system + –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
      const system = INITIAL_SESSION.messages[0];
      const tail = INITIAL_SESSION.messages.slice(-10);
      INITIAL_SESSION.messages = [system, ...tail];
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI
    const completion = await openai.chat(INITIAL_SESSION.messages);
    console.log("0000", completion);
    INITIAL_SESSION.messages.push({
      role: openai.roles.ASSISTANT,
      content: completion,
    });

    return NextResponse.json({ reply: completion }, { status: 200 });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ AI:", error);
    return NextResponse.json(
      { message: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞." },
      { status: 500 }
    );
  }
}

// Handle CORS preflight
export function OPTIONS() {
  return NextResponse.json(null, {
    status: 200,
    headers: {
      "Access-Control-Allow-Origin": "*",
      "Access-Control-Allow-Methods": "GET, POST, OPTIONS, PUT, PATCH, DELETE",
      "Access-Control-Allow-Headers":
        "Origin, X-Requested-With, Content-Type, Accept",
    },
  });
}
